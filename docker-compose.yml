---
# https://airflow.apache.org/docs/apache-airflow/stable/

version: '3'

x-airflow-common:
  &airflow-common
  image: vit0r/airflow:1.0.0
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672/airflow
    AIRFLOW__CORE__FERNET_KEY: jIRF7dRMWuGC60ZIWJeatT6NDSNXgz7YvHs8HQQ=
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__CORE__DAGS_FOLDER: /usr/local/airflow/dags/
    AIRFLOW__CORE__PLUGINS_FOLDER: /usr/local/airflow/plugins/
    AIRFLOW__CORE__DEFAULT_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__CORE__HOSTNAME_CALLABLE: 'airflow.utils.net.get_host_ip_address'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__WEBSERVER__BASE_URL: 'http://airflow.local:443'
    AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 443
    AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT: /usr/local/airflow/webserver/server-cert.pem
    AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY:  /usr/local/airflow/webserver/server-key.pem
    AIRFLOW__WEBSERVER__COOKIE_SECURE: 'true'
    AIRFLOW__CELERY__FLOWER_BASIC_AUTH: 'flower:flower'
    # AIRFLOW__SMTP__SMTP_HOST: 'smtp.gmail.com'
    # AIRFLOW__SMTP__SMTP_SSL: 'true'
    # AIRFLOW__SMTP__SMTP_USER: ''
    # AIRFLOW__SMTP__SMTP_PASSWORD_SECRET: 'smtp_password'
    # AIRFLOW__SMTP__SMTP_PORT: 587
    # AIRFLOW__SMTP__SMTP_MAIL_FROM: ''
    # AIRFLOW__CELERY__SSL_ACTIVE: 'true'
    # AIRFLOW__CELERY__SSL_KEY: /usr/local/airflow/celery/server-key.pem
    # AIRFLOW__CELERY__SSL_CERT: /usr/local/airflow/celery/server-cert.pem
    # AIRFLOW__CELERY__SSL_CACERT: /usr/local/airflow/celery/ca-cert.pem
  volumes:
     - ./dags:/usr/local/airflow/dags
     - /etc/ssl:/etc/ssl
     - /opt/airflowreports:/opt/
  depends_on:
    rabbitmq:
      condition: service_started
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    hostname: postgresql.local
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    networks: 
      airflow:
        aliases: 
          - postgresqlnet

  rabbitmq:
    hostname: rabbitmq.local
    container_name: airflow_rabbitmq
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: airflow
      # RABBITMQ_MANAGEMENT_SSL_CACERTFILE: /opt/ca-cert.pem
      # RABBITMQ_MANAGEMENT_SSL_CERTFILE: /opt/server-cert.pem
      # RABBITMQ_MANAGEMENT_SSL_KEYFILE: /opt/server-key.pem
      # RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT: 'false'
      # RABBITMQ_MANAGEMENT_SSL_VERIFY: verify_none
      # RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbit versions ["tlsv1.3"]'
    ports:
      - "15672:15672"
    # - "5672:5672"
    # - "5671:5671"
    volumes:
    - rabbitmq_data:/data
    # - ./rabbitmq/ca-cert.pem:/opt/ca-cert.pem:ro
    # - ./rabbitmq/server-cert.pem:/opt/server-cert.pem:ro
    # - ./rabbitmq/server-key.pem:/opt/server-key.pem:ro
    networks: 
      airflow:
        aliases: 
          - rabbitmqnet

  airflow-dbup:
    <<: *airflow-common
    command: db upgrade
    networks: 
      airflow:
        aliases: 
          - upgradenet

  airflow-user:
    <<: *airflow-common
    command: users create --username airflow --firstname airflow --lastname local --role Admin --password airflow --email airflow@local
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - dbup1

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    hostname: airflow.local
    command: webserver
    ports:
      - 443:443
    restart: always
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - webservernet
  
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler1
    command: scheduler
    restart: always
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - asnet
  
  airflow-worker:
    <<: *airflow-common
    container_name: airflow_worker1
    command: celery worker
    restart: always
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - w1net
  
  airflow-worker2:
    <<: *airflow-common
    container_name: airflow_worker2
    command: celery worker
    restart: always
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - w2net

  airflow-worker3:
    <<: *airflow-common
    container_name: airflow_worker3
    command: celery worker
    restart: always
    depends_on:
      - airflow-dbup
    networks: 
      airflow:
        aliases: 
          - w3net
  flower:
    <<: *airflow-common
    container_name: airflow_flower
    command: celery flower
    ports:
      - 5555:5555
    restart: always
    networks: 
      airflow:
        aliases: 
          - flowernet

volumes:
  postgres-db-volume:
  rabbitmq_data:

networks: 
  airflow: